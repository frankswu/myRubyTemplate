

import java.io.Serializable;

import com.genertech.framework.bean.BaseResultBean;
import com.genertech.framework.units.BeanUtils;
import com.genertech.framework.units.LogUtils;

/**
create table XXXXX (
<% value.each{|attr|                                                                                                        
   propColumn = attr[4].upcase %>
<%= propColumn %>,<%}%>
)
 * @author frankswu
 *
 */
public class <%= key %>Bean extends BaseResultBean implements Serializable {                                                                                               

  private static final String TAG = "<%= key %>Bean";

<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1]

  propType = attr[0] %>                                                                                                     
  private <%= propType %>  <%= prop%>;// <%= propDesc %><% }%>
	@Override
	public void setMapKey() {
		super.mapKey = new String[]{
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1] %>
"<%= prop %>",// <%= propDesc%><%}%>
		};
	}

	@Override
	public void setTableColumsKey() {
		super.tableColumsKey = new String[]{
//数据表字段，要核对
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  propColumn = attr[4].upcase %>
"<%= propColumn %>",//<%= propDesc %><%}%>
				};
	}


	public void setBeanFromMap() {
		if (beanMaps != null || !beanMaps.isEmpty()) {
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1] %>
			this.<%= prop %> = (String) beanMaps.get("<%= prop %>");//<%= propDesc %><%}%>
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1] %>
			this.<%= prop %> = BeanUtils.getStringByMapIgnoreUpAndLowercase( beanMaps,"<%= prop %>");//<%= propDesc %><%}%>
			LogUtils.logStringArray(TAG, "setBeanFromMap", toString());
//			Log.d(TAG,toString());
		}
	}

/*
	@Override
	public void setMapTitle() {
		// TODO Auto-generated method stub
	}
*/	
	@Override
	public String toString() {
		StringBuffer sb  = new StringBuffer();
		sb
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1] %>
		.append("<%= prop %>[").append( <%= prop %> + "]")// <%= propDesc %><%}%>
;		
		return sb.toString();
	}
	@Override
	public void setTableName() {	
	       // TOOD 
		super.TABLE_NAME = "";
	}

<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  prop = attr[1]
  propName = attr[1].sub(/./){|s|s.upcase}
  propType = attr[0] %>                                                                                                     
  
  /**
   *  GET <%= propDesc %>
   *
   */	                                                                                                                            
  public  <%= propType %> get<%=propName %>(){
    this.<%= prop%> = BeanUtils.getStringByMapIgnoreUpAndLowercase(beanMaps, "<%= prop %>");//<%= propDesc %>
    return    <%= prop%>;
  }
                                                                                                                            
  /**
   *  SET <%= propDesc %>
   *
   */	                                                                                                                            
  public void set<%=propName %>(<%=propType %> <%=propName.downcase %>){
    this.<%= prop%> = <%= propName.downcase%>;
    super.beanMaps.put("<%= prop%>", <%= propName.downcase %>);
  }                                                    

  <% } %>                                                                                                                   
public static int[] viewIds = new int[]{
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]
  propName = attr[1].sub(/./){|s|s.upcase}
  propViewId = attr[3] %>
R.id.<%= propViewId %><%= propName%>,// <%= propDesc%><%}%>
};

}                                                                                                                           
                                                                                                                            

