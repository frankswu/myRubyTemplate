import java.util.HashMap;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.genertech.framework.activity.BaseActivity;
import com.genertech.framework.activity.HandlerHelp;
import com.genertech.framework.service.UserInfoService;
import com.genertech.framework.units.Constant;
import com.genertech.sss.R;
import com.genertech.sss.main.entity.UserInfoEntity;
import com.genertech.sss.riskmanagement.bean.RepairAlarmBean;
import com.genertech.sss.webservice.BusinessComponent;

/**
 * 
 * @author frankswu
 *
 */
public class <%= key %>InfoActivity extends BaseActivity {

	private static final String TAG = "<%= key %>InfoActivity";
	
	private Context context = null;
	private ImageView ivBack = null; // 顶部返回图片按钮
	private Button btnChecked = null; // 确认阅读
	private Button btnConfirm = null; // 确认(删除)
	protected TextView etPromptTitle;

	private String id = "";
	private boolean hasstatus;
	protected int reviewLayoutRes;
	private boolean isUseUserId;

	protected Map<String, String> map;
	protected <%= key %>Bean bean;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(reviewLayoutRes);
//		setContentView(R.layout.<%= key.gsub(/[A-Z]/,'_\&').downcase %>_info);
		context = this;
		initComponent();
	}

	@Override
	public void initComponent() {
		ivBack = (ImageView) findViewById(R.id.iv_back);
		ivBack.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View view) {
				//StareControlAlarmInfoActivity.this.onBackPressed();
				Intent intent = null;
				intent = new Intent(context,<%= key %>ListActivity.class);
				startActivity(intent);
				finish();
				
			}
		});

		etPromptTitle = (TextView) findViewById(R.id.et_title_tv);
		setPromptTitle();

		bean = (<%= key %>Bean)getIntent().getSerializableExtra("<%= key %>Bean");
//		<%= key %>Bean alarm = (<%= key %>Bean)getIntent().getSerializableExtra("<%= key %>Bean.map");
//		isUseUserId = bean.isUseUserId();
		id = bean.getId();
		// TODO frankswu
		// ViewUtils.setViewTextFromMap(this, map, <%= key %>Bean.getItemTextViewIds(), <%= key %>Bean.getItemTextViewMapKeys());

//		((TextView)findViewById(R.id.tv_belong_system)).setText(alarm.getSystem());
		
		btnChecked = (Button)findViewById(R.id.btn_checked);
		btnChecked.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				hasstatus = false;
				new UIHandler().execute("请稍后");
			}
		});
		
		btnConfirm = (Button)findViewById(R.id.btn_confirm);
		btnConfirm.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				hasstatus = true;
				new UIHandler().execute("请稍后");
			}
		});
	}


	protected <%= key %>Bean getData2Bean() {
		if (ViewComponentUtils.isNull(context, ettRemark,"意见备注不能为空！")) {
			return null;
		}
		if (bean == null) {
			bean = new <%= key %>Bean();
		}
//		bean.setRemark(ettRemark.getText().toString().trim());
//		bean.setSuggestion(((BaseDictionaryBean)sprSuggestion.getSelectedItem()).getValue());
		bean.setId(id);
		return bean;
	}

	class UIHandler extends HandlerHelp {

		public UIHandler() {
			super(context);
		}

		@Override
		public void doMessage(Message msg) {
			doMessageInUiHandler(msg);
		}

		@Override
		public void doTask(Message msg) throws Exception {
			doTaskInUiHandler(msg);
		}
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}

	@Override
	public void bindComponent() {	}

	@Override
	public void initData() {	}

	/**
	 * @param msg
	 */
	protected abstract void doMessageInUiHandler(Message msg);

	/**
	 * @param msg
	 */
	protected abstract void doTaskInUiHandler(Message msg);


	/**
	 * set back action by back button on top
	 */
	protected abstract void gobackAction();
	
	protected abstract void setPromptTitle() ;	

	protected abstract void setReviewLayoutRes() ;
	
/*
	@Override
	protected void doMessageInUiHandler(Message msg) {
		// TODO frankswu
		switch (msg.what) {
		case Constant.MSG_SUCCESSED:
			Intent intent = new Intent();
			intent = new Intent(this,InstructionApproveListActivity.class);
			intent.putExtra("title", "待领导审批列表");
			startActivity(intent);
			finish();
			break;
		case Constant.MSG_FAILED:
//			Toast.makeText(this, "当前网络不可用！", Toast.LENGTH_SHORT).show();
			break;
		}

	}

	@Override
	protected void doTaskInUiHandler(Message msg) {
		// TODO frankswu
//		HashMap<String, Object> parms = new HashMap<String, Object>();
//		parms.put("instructionId", super.id);
		<%= key %>Bean bean = getData2Bean();
		UserInfoEntity userInfo = UserInfoService.getLoginUserInfo(this);
		RResult result = NotificationAndOrderService.approveInstruction(this,  userInfo, bean);
		if (result != null && result.isSuccess()) {
			msg.what = Constant.MSG_SUCCESSED;
			// 发送定位信息
			LocationHelperService positionService = new LocationHelperService(context);
			try {
				positionService.submitLocationOfReport(InstructionApproveActivity.this, userInfo, bean.getId(), "领导审批指令书");
			} catch (Exception e) {
				LogUtils.logException(context, TAG, e);
			}
		} else {
			msg.what = Constant.MSG_FAILED;
		}

	}

	@Override
	protected void gobackAction() {
		Intent intent = null;
		intent = new Intent(this,InstructionApproveListActivity.class);
		startActivity(intent);
		finish();

	}

	@Override
	protected void setReviewLayoutRes() {
		super.reviewLayoutRes = R.layout.instruction_approve; 
	}

	@Override
	protected void setPromptTitle() {
		super.etPromptTitle.setText("指令书领导审批");
	}

	@Override
	public void initComponent() {
		super.initComponent();
		ettContext = (EditText) findViewById(R.id.ettContext);
		if (map != null && map.containsKey("context")) {
			ettContext.setText(map.get("context"));
		}
	}
	
	@Override
	protected <%= key %>Bean getData2Bean() {
		bean = new <%= key %>Bean();
		if (ViewComponentUtils.isNull(context, ettContext,"指令内容不能为空！")) {
			return null;
		}
		bean.setContext(ettContext.getText().toString().trim());
		return super.getData2Bean();
	}

	
	class UIHandler extends HandlerHelp {

		public UIHandler() {
			super(context);
		}

		@Override
		public void doMessage(Message msg) {
				switch (msg.what) {
			case Constant.MSG_SUCCESSED:
				Intent intent = new Intent();
				intent = new Intent(context,<%= key %>ListActivity.class);
				intent.putExtra("title", "盯控告警列表");
				startActivity(intent);
				finish();
				break;
			case Constant.MSG_FAILED:
				Toast.makeText(context, "当前网络不可用！", Toast.LENGTH_SHORT).show();
				break;
			}
		}

		@Override
		public void doTask(Message msg) throws Exception {
			HashMap<String, Object> parms = new HashMap<String, Object>();
			UserInfoEntity userInfo = UserInfoService.getLoginUserInfo(context);
			parms.put("account", userInfo.getAccount());
			parms.put("password", userInfo.getPassword());
			parms.put("id", id);
			parms.put("type", "alarm");
			parms.put("confirm", "已确认");
			if(hasstatus)
			{
				parms.put("status", "1");
			}
			BusinessComponent service = new BusinessComponent();
			if(service.statusUpdate(parms)){
				msg.what = Constant.MSG_SUCCESSED;
			}else{
				msg.what = Constant.MSG_FAILED;
			}
		}
	}
*/
}


/**

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    style="@style/main_layout" >

    <include
        android:id="@+id/titleLayout"
        layout="@layout/app_head" />

    <ScrollView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_marginLeft="10dp"
        android:layout_marginRight="20dp" >

        <LinearLayout
            android:id="@+id/fixduty_form_ln_layout"
            style="@style/layout_f_w_v"
            android:layout_marginTop="5dip" >

            <LinearLayout style="@style/layout_f_w_h_margintop5" >
<% value.each{|attr|                                                                                                        
  propDesc = attr[2]

  propName = attr[1].sub(/./){|s|s.upcase}
  propViewId = attr[3] %>
            <TextView
                android:id="@+id/lab<%= propName %>"
                style="@style/form_w120_w_right"
                android:text="<%= propDesc%>：" />

            <TextView
                android:id="@+id/<%= propViewId%><%= propName %>"
                style="@style/form_f_w_gravitycenterleft" />
<%}%>
        </LinearLayout>



            <LinearLayout
                style="@style/layout_f_w_h_margintop5"
                android:layout_marginTop="20dp"
                android:gravity="center" >

                <Button
                    android:id="@+id/btn_checked"
                    style="@style/btn_readed"
                    android:layout_marginLeft="20dp" />

                <Button
                    android:id="@+id/btn_confirm"
                    style="@style/btn_sure"
                    android:layout_marginLeft="25dp"
                    android:background="@drawable/confirm" />
            </LinearLayout>
        </LinearLayout>
    </ScrollView>

</LinearLayout>

**/